# Message template for communicating with AI

=======================================================================================
Актуальний результат: 
Очікуваний результат: 
=======================================================================================
Покращ ui та ux
=======================================================================================
Поточний режим відповіді: `cursor` у .md форматі
Режим відповіді не міняти поки я не попрошу
=======================================================================================
Поточний режим відповіді: `для мене`
=======================================================================================
Продовжуй виконувати "architecture-improvement-plan-v6.md"
=======================================================================================
продовжуй
=======================================================================================
npm run check
=======================================================================================
Роби як вважаєш буде краще для проєкту
=======================================================================================
Поки не закінчиш це завдання, то запитуй що робити далі, а сам аналізуй які рішення будуть корисними для проєкту та для якісного сучасного коду
Якщо все ж таки мене запитуєш, то запитуй в форматі варіантів відповідей, наприклад:
1. Продовжувати
2. Виставити інший пріоритет
3. тощо
=======================================================================================
Проведи комплексний аудит коду за наступними критеріями.

**Архітектура та Структура:**
1.  **SSoT (Single Source of Truth):** Чи є єдине джерело правди для кожного елемента стану?
2.  **UDF (Unidirectional Data Flow):** Чи є потік даних односпрямованим та передбачуваним?
3.  **SoC (Separation of Concerns):** Наскільки добре розділені відповідальності (стан, логіка, UI)?
4.  **Композиція:** Чи ефективно використовуються компоненти для побудови UI?
5.  **Чистота та Побічні ефекти:** Наскільки добре ізольовані "нечисті" операції (API, DOM, таймери)?

**Якість Коду та Реалізації:**
6.  **DRY (Don't Repeat Yourself):** Чи є дублювання коду, яке можна усунути?
7.  **Простота та Читабельність (KISS):** Чи є надмірно складні рішення? Наскільки код зрозумілий (якість іменування)?
8.  **Продуктивність:** Чи є потенційні проблеми зі швидкістю (зайві обчислення, перерендери)?
9.  **Документація та Коментарі:** Чи коментарі пояснюють *навіщо*, а не *що*?

**Результат:**
Створи файл `architecture-improvement-plan-vX.md` з покроковим планом покращення, групуючи рекомендації за кожним з пунктів.
=======================================================================================
1. Проаналізуй всі файли документації
2. Реорганізуй їх по папках, зроби рефакторінг назв файлів
3. Видали застарілі, об'єднай ті що треба об'єднати, розділи ті що треба розділити, тобто зроби генеральне прибирання
4. Покращ документацію
5. всі виконані improvement та plan треба помістити в якусь папку done
6. для всіх фалів md та txt розробити єдину структуру, наприклад: тип, статус, назва, опис
7. Додай в усі баг репорти в папці done, додай статус "виконано"
підготуй md файл для курсор
=======================================================================================
Думаю, що буде швидше якщо я зроблю через powershell масове перейменування та перенесення файлів. (бо такий підхід не потребує підтвердження кожного кроку).
Але пиши команди з повним шляхом до проєкту. Напиши весь потрібний список.
=======================================================================================
Ти тільки пишеш в чат, але перестав виправляти файли, тож продовжуй роботу
=======================================================================================
постав актуальні статуси для md планів та баг репортів, щоб виконені задачі були у відповідних папках