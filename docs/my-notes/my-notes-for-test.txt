
    // Робимо хід: вліво, дистанція 1
    await page.getByTestId('dir-btn-left').click();

    // Робимо хід: виниз, дистанція 1
    await page.getByTestId('dir-btn-down').click();
    
    // Робимо хід: верх, дистанція 1
    await page.getByTestId('dir-btn-up').click();

    // Робимо хід: вправо, дистанція 1
    await page.getByTestId('dir-btn-right').click();
    

=======================================================================================
сторити автотест
сенс автотеста Перевірити що з'явилась модальне вікно "Блискучий аналіз!"
```
    // 1. Зайти на головну сторінку
    await page.goto('/');

    // Вмикаємо Test Mode
    await page.getByTestId('test-mode-btn').click();

    // 2. Знайти і натиснути кнопку "Гра проти комп'ютера"
    await page.getByTestId('play-vs-computer-btn').click();

    // 3. Дочекатися завантаження ігрової сторінки
    await page.getByTestId('beginner-mode-btn').click();

    // Закриваємо модальне вікно "Поширені питання"
    await page.getByTestId('modal-btn-modal.ok').click();

    // Очікуємо завантаження сторінки після вибору режиму
    await page.waitForURL('**/game/vs-computer');

    // Перевіряємо, що на сторінці є панель керування
    await expect(page.locator('.direction-controls-panel')).toBeVisible();

    // Встановлюємо розмір дошки 3x3, двічі натиснувши кнопку зменшення
    await page.getByTestId('decrease-board-size-btn').click();

    // Вмикаємо режим блокування клітинок
    await page.getByTestId('block-mode-toggle').click();

    // Робимо хід: виниз, дистанція 1
    await page.getByTestId('dir-btn-down').click();
    await page.getByTestId('dist-btn-1').click();

    // Підтверджуємо хід
    await page.getByTestId('confirm-move-btn').click();

    // Перевіряємо, що комп'ютер зробив хід
    await expect(page.locator('.control-btn.center-info.computer-move-display')).toBeVisible();

    // Робимо хід: по-діагоналі вверх вправо, дистанція 2
    await page.getByTestId('dir-btn-up-right').click();
    await page.getByTestId('dist-btn-2').click();

    // Підтверджуємо хід
    await page.getByTestId('confirm-move-btn').click();

    // Перевіряємо, що комп'ютер зробив хід
    await expect(page.locator('.control-btn.center-info.computer-move-display')).toBeVisible();

    // Робимо хід: по-діагоналі вверх вліво, дистанція 1
    await page.getByTestId('dir-btn-up-left').click();
    await page.getByTestId('dist-btn-1').click();

    // Підтверджуємо хід
    await page.getByTestId('confirm-move-btn').click();

    // Перевіряємо, що комп'ютер зробив хід
    await expect(page.locator('.control-btn.center-info.computer-move-display')).toBeVisible();

    // Задаємо параметри ходу комп'ютера
    await page.getByTestId('test-mode-dir-btn-right').click();

    // Робимо хід: виниз, дистанція 1
    await page.getByTestId('dir-btn-down').click();
    await page.getByTestId('dist-btn-1').click();

    // Підтверджуємо хід
    await page.getByTestId('confirm-move-btn').click();

    // Перевіряємо, що комп'ютер зробив хід
    await expect(page.locator('.control-btn.center-info.computer-move-display')).toBeVisible();

    // Натискаємо на кнопку "Ходів немає"
    class="no-moves-btn"
    
    // Перевіряємо, що модальне вікно з'явилося
    await expect(page.getByTestId('opponent-trapped-modal')).toBeVisible();

    // Перевіряємо заголовок модального вікна за ключем локалізації
    await expect(page.getByTestId('opponent-trapped-modal-title')).toHaveAttribute('data-i18n-key', 'modal.playerNoMovesTitle');
```
=======================================================================================
@/tests/opponent-trapped-modal.spec.ts 
сюди треба зробити другий тест, такий самий, але замість:
await setBlockMode(page, BlockModeState.On); намінити на await setBlockMode(page, BlockModeState.Off);
і як наслідок замість
```
// Перевіряємо, що модальне вікно з'явилося
    await expect(page.getByTestId('opponent-trapped-modal')).toBeVisible();
```
перевіряємо що вікно не з'явилось, бо режим заблокованих клітин вимкнений, а це означає, що комп'ютер не може бути заблокованим

напиши теси, але тести не запускай
=======================================================================================
@/tests/player-no-moves-modal.spec.ts 
сюди треба зробити другий тест, такий самий, але замість:
await setBlockMode(page, BlockModeState.On); намінити на await setBlockMode(page, BlockModeState.Off);
і як наслідок замість
```
// Перевіряємо, що модальне вікно з'явилося
    await expect(page.getByTestId('opponent-trapped-modal')).toBeVisible();
```
треба перевіряти що з'явилось "class="modal-window s-CbKqU8tqPnSX"" але треба зробити testID
а в class="modal-title s-CbKqU8tqPnSX" знаходиться data-i18n-key="modal.gameOverTitle" (але треба зробити testID)
=======================================================================================
=======================================================================================
=======================================================================================
=======================================================================================
=======================================================================================
=======================================================================================
=======================================================================================
=======================================================================================
=======================================================================================