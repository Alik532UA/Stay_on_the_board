проблема сталося після @git-changes
після провадження @/docs/plans/architecture-improvement-plan-v19.md 

автотест швидше натискає на кнопку 'confirm-move-btn' ніж алгоритм розблоковує цю кнопку для натискання.
як наслідок відкривається модальне вікно data-testid="confirm-move-hint-modal", замість того щоб підтвердити хід
проаналізуй які причини цього, може ми десь додали зайву паузу в обробці?

іншими словами коли вибрана напрямок та відстань, тоді кнопка 'confirm-move-btn' підтверджує хід, а не показує модальне вікно data-testid="confirm-move-hint-modal"
коли напрямок та відстань не вибрані, тоді  кнопка 'confirm-move-btn' показує модальне вікно data-testid="confirm-move-hint-modal"

після вибору напрямку та відстані автотест встигає натиснути 'confirm-move-btn', до того як кнопка встигла зрозуміти, що вже вона працює як підтвердження ходу

чи зрозуміло я пояснив, чи є у тебе уточнюючі питання?

**Правила**: Ознайомся та дотримуйся правил з @/docs/my-notes/AI_AGENT_RULES.md 
**Мова**: мова роздумів та відповіді в чаті лише українська. Англійською не пиши, а заощаджуй токени.


---

**Ключова вимога:** Твоє рішення має бути комплексним. Не роби поверхневих виправлень ("латок" чи "костилів").
**Реалізуй системне виправлення**, яке усуває корінь проблеми та відповідає цільовій архітектурі проєкту.
при виправленні використовуй принципи:
1.  **SSoT (Single Source of Truth):** Чи є єдине джерело правди для кожного елемента стану?
2.  **UDF (Unidirectional Data Flow):** Чи є потік даних односпрямованим та передбачуваним?
3.  **SoC (Separation of Concerns):** Наскільки добре розділені відповідальності (стан, логіка, UI)?
4.  **Композиція:** Чи ефективно використовуються компоненти для побудови UI?
5.  **Чистота та Побічні ефекти:** Наскільки добре ізольовані "нечисті" операції (API, DOM, таймери)?
6.  **DRY (Don't Repeat Yourself):** Чи є дублювання коду, яке можна усунути?
7.  **Простота та Читабельність (KISS):** Чи є надмірно складні рішення? Наскільки код зрозумілий (якість іменування)?
8.  **Продуктивність:** Чи є потенційні проблеми зі швидкістю (зайві обчислення, перерендери)?
9.  **Документація та Коментарі:** Чи коментарі пояснюють *навіщо*, а не *що*?

---

**Відладка (Дебагінг):**
    *   **Використовуй `logService`:** Замість `console.log` завжди використовуй централізований `logService`.
    *   **Доповнюй логи для аналізу:** Якщо поточний рівень логування не дозволяє діагностувати описану проблему, додай нові виклики logService у відповідних місцях коду. Мета — забезпечити, щоб майбутні логи містили всю інформацію, яка дозволить мені самостійно проаналізувати, чи вирішено проблему, і що саме потребує виправлення.
    *   **Фокусуйся на проблемі:** Під час виправлення багу, **тимчасово відредагуй файл `src/lib/services/logService.js`**. Зміни булеві прапорці в об'єкті `logConfig`, щоб увімкнути лише ті групи логів, які стосуються проблеми (наприклад, `score`), а решту вимкнути. Це допоможе усунути інформаційний шум.
    *   **Незмінність логів:** Параметри логування не змінюй, доки я (людина) не підтвердить, що баг виправлено. При порушені цього правила AI буде вимкнено та видалено.
**Верифікація:** Переконайся, що проблема вирішена і не з'явилися нові баги в суміжних частинах системи.

---

**Візуалізація дошки (`game-board`) НІКОЛИ не повинна впливати на `center-info` та логіку гри.**
*   Логіка гри та `center-info` НІЧОГО не знають про існування візуальної дошки.
*   Додавання або видалення пауз та анімацій стосується **тільки** візуального шару і не повинно жодним чином затримувати чи змінювати логіку гри та оновлення `center-info`.

---

logService.js:134 Log service initialized. Use window.setLogLevels({ groupName: boolean }) to configure.
init.js:31 ✅ i18n ініціалізовано успішно
logService.js:102 [STATE] Оновлення налаштувань. Поточний стан: Object
logService.js:102 [STATE] Нові налаштування: Object
logService.js:102 [STATE] Об'єднані налаштування: Object
logService.js:102 [STATE] Стан для збереження в localStorage: Object
logService.js:104 [TEST_MODE] TestModeWidget mounted
logService.js:102 [TEST_MODE] TestModeWidget settingsStore subscription fired Object
logService.js:104 [TEST_MODE] autorun called with isTestModeOn: true
logService.js:104 [TEST_MODE] Applying ON defaults
logService.js:102 [STATE] Оновлення налаштувань. Поточний стан: Object
logService.js:102 [STATE] Нові налаштування: Object
logService.js:102 [STATE] Об'єднані налаштування: Object
logService.js:102 [STATE] Стан для збереження в localStorage: Object
logService.js:102 [TEST_MODE] TestModeWidget settingsStore subscription fired Object
logService.js:104 [TEST_MODE] autorun called with isTestModeOn: true
logService.js:104 [TEST_MODE] Applying ON defaults
logService.js:104 [GAME_MODE] Setting game mode to: vs-computer
logService.js:102 [STATE] [GameStateMutator] Resetting game state Object
logService.js:104 [TEST_MODE] [GameStateMutator] Test mode is ON
logService.js:102 [STATE] [GameStateMutator] Resetting game state Object
logService.js:104 [TEST_MODE] [GameStateMutator] Test mode is ON
logService.js:102 [STATE] Оновлення налаштувань. Поточний стан: Object
logService.js:102 [STATE] Нові налаштування: Object
logService.js:102 [STATE] Об'єднані налаштування: Object
logService.js:102 [STATE] Стан для збереження в localStorage: Object
logService.js:102 [TEST_MODE] TestModeWidget settingsStore subscription fired Object
logService.js:104 [TEST_MODE] autorun called with isTestModeOn: true
logService.js:104 [TEST_MODE] Applying ON defaults
logService.js:102 [STATE] [GameStateMutator] Resetting game state Object
logService.js:104 [TEST_MODE] [GameStateMutator] Test mode is ON
logService.js:102 [STATE] Оновлення налаштувань. Поточний стан: Object
logService.js:102 [STATE] Нові налаштування: Object
logService.js:102 [STATE] Об'єднані налаштування: Object
logService.js:102 [STATE] Стан для збереження в localStorage: Object
logService.js:102 [TEST_MODE] TestModeWidget settingsStore subscription fired Object
logService.js:104 [TEST_MODE] autorun called with isTestModeOn: true
logService.js:104 [TEST_MODE] Applying ON defaults
logService.js:104 [STATE] Block mode was enabled in settings, resetting game state for it.
logService.js:104 [STATE] Скидання стану Block Mode
logService.js:102 [TEST_MODE] TestModeWidget settingsStore subscription fired Object
logService.js:104 [TEST_MODE] autorun called with isTestModeOn: true
logService.js:104 [TEST_MODE] Applying ON defaults
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [LOGIC_MOVE] setDirection: встановлено напрямок Object
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [LOGIC_MOVE] setDistance: встановлено відстань Object
logService.js:104 [LOGIC_MOVE] [userActionService] Input locked: isComputerMoveInProgress=true
logService.js:102 [LOGIC_MOVE] performMove: початок з параметрами: Object
logService.js:104 [LOGIC_MOVE] _calculateMirrorMovePenalty: пропускаємо перевірку "дзеркального" ходу.
logService.js:104 [LOGIC_MOVE] performMove: завершено успішно
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:104 [GAME_MODE] advanceToNextPlayer: Передача ходу наступному гравцю.
logService.js:102 [STATE] [GameStateMutator] Setting current player 1
logService.js:104 [GAME_MODE] advanceToNextPlayer: Наступний гравець: ai.
logService.js:104 [GAME_MODE] advanceToNextPlayer: Запуск ходу комп'ютера.
logService.js:104 [GAME_MODE] triggerComputerMove: Початок ходу комп'ютера.
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [TEST_MODE] aiService: отримано стан testModeStore Object
logService.js:102 [TEST_MODE] aiService: виконується ручний хід Object
logService.js:102 [GAME_MODE] triggerComputerMove: Результат getComputerMove: Object
logService.js:104 [GAME_MODE] triggerComputerMove: Комп'ютер має хід, виконуємо...
logService.js:102 [LOGIC_MOVE] performMove: початок з параметрами: Object
logService.js:104 [LOGIC_MOVE] performMove: завершено успішно
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:104 [GAME_MODE] advanceToNextPlayer: Передача ходу наступному гравцю.
logService.js:102 [STATE] [GameStateMutator] Setting current player 0
logService.js:104 [GAME_MODE] advanceToNextPlayer: Наступний гравець: human.
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:104 [LOGIC_MOVE] [userActionService] Input unlocked: isMoveInProgress=false
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [LOGIC_MOVE] setDirection: встановлено напрямок Object
logService.js:102 [STATE] [GameStateMutator] Applying move Object
logService.js:102 [LOGIC_MOVE] setDistance: встановлено відстань Object