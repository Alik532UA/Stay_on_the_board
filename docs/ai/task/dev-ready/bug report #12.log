index.html:1  Error handling response: TypeError: Cannot read properties of undefined (reading 'features')
    at chrome-extension://jjkchpdmjjdmalgembblgafllbpcjlei/mcafee_wa_contentplg.js:2719:35
index.html:1  Unchecked runtime.lastError: Could not establish connection. Receiving end does not exist.
[NEW] Explain Console errors by using Copilot in Edge: click
         
         to explain an error. 
        Learn more
        Don't show again
VM155 logger.js:466  Uncaught SyntaxError: Unexpected token 'export' (at VM155 logger.js:466:1)
logger.js:186 [INFO] üîß Bug fixes applied: {bug12: 'Blocked cells mode now properly displays blocked cells with red ‚úó symbol', bug13: 'Default distance now correctly resets to 1 when changing board size', bug15: 'MainMenuComponent bindEvents now prevents duplicate event listeners', bug17: 'GameControlsComponent render now prevents duplicate rendering'}
logger.js:188 [INFO] üé§ Speech manager initialized
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.speechEnabled'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.language'}
logger.js:188 [DEBUG] GameLogic: constructor
logger.js:188 [INFO] [GameLogic] Initializing...
logger.js:188 [DEBUG] [GameLogic] Initializing Game Logic
logger.js:188 [DEBUG] GameLogic: subscribeToGameState
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.isActive'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.noMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedMove'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.speechEnabled'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.blockedMode'}
logger.js:188 [DEBUG] [GameLogic] initSpeech called
logger.js:188 [DEBUG] [GameLogic] Game Logic initialized
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'ui.modal'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'ui.modal'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'ui.modal'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'ui.currentView'}
logger.js:186 [DEBUG] [App] Initial view: {initialView: 'mainMenu'}
logger.js:186 [DEBUG] [ViewManager] render: {viewName: 'mainMenu', params: {‚Ä¶}}
base-component.js:329 [MainMenuComponent] Component created {options: {‚Ä¶}}
logger.js:188 [DEBUG] [MainMenuComponent] subscribeToState called
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.language'}
base-component.js:329 [MainMenuComponent] Component initialized {}
logger.js:188 [INFO] ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ñ –∫–æ–Ω—Ç—Ä–æ–ª–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ
logger.js:186 [DEBUG] [ViewManager] Game controls visibility: {viewName: 'mainMenu', isGameView: false}
logger.js:188 [DEBUG] [ViewManager] Game controls content cleared
logger.js:186 [INFO] Started: App initialization {timestamp: 1752490004355, startTime: 1752490004356}
logger.js:188 [INFO] EventBus middleware configured
logger.js:188 [INFO] Speech control configured
logger.js:188 [INFO] Systems initialized successfully
logger.js:188 [INFO] üöÄ –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –¥–æ–¥–∞—Ç–∫—É Stay on the board
logger.js:186  [WARN] ‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ç–µ–º–∏ {error: "Cannot set properties of null (setting 'textContent')"}
outputToConsoleFast @ logger.js:186
log @ logger.js:73
warn @ logger.js:94
initTheme @ main-new.js:321
init @ main-new.js:268
App @ main-new.js:89
(anonymous) @ main-new.js:745
logger.js:186 [INFO] ‚úÖ –ú–æ–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–∞ {language: 'uk'}
logger.js:188 [INFO] ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ñ –∫–æ–Ω—Ç—Ä–æ–ª–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.language'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.theme'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.style'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.isActive'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.points'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'ui.error'}
logger.js:188 [INFO] ‚úÖ –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∞
logger.js:188 [INFO] ‚úÖ –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–∏–π
logger.js:186 [DEBUG] [StateManager] navigateTo: {viewName: 'mainMenu', params: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'ui.currentView', value: 'mainMenu'}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'ui.currentView', count: 1}
logger.js:186 [DEBUG] [App] ui.currentView changed: {view: 'mainMenu'}
logger.js:186 [DEBUG] [ViewManager] render: {viewName: 'mainMenu', params: {‚Ä¶}}
base-component.js:329 [MainMenuComponent] Component created {options: {‚Ä¶}}
logger.js:188 [DEBUG] [MainMenuComponent] subscribeToState called
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.language'}
base-component.js:329 [MainMenuComponent] Component initialized {}
logger.js:188 [INFO] ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ñ –∫–æ–Ω—Ç—Ä–æ–ª–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ
logger.js:186 [DEBUG] [ViewManager] Game controls visibility: {viewName: 'mainMenu', isGameView: false}
logger.js:188 [DEBUG] [ViewManager] Game controls content cleared
logger.js:188 [DEBUG] [StateManager] Calling viewManager.navigateTo
logger.js:186 [DEBUG] [ViewManager] navigateTo: {viewName: 'mainMenu', params: {‚Ä¶}}
logger.js:186 [DEBUG] [ViewManager] render: {viewName: 'mainMenu', params: {‚Ä¶}}
base-component.js:329 [MainMenuComponent] Component created {options: {‚Ä¶}}
logger.js:188 [DEBUG] [MainMenuComponent] subscribeToState called
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.language'}
base-component.js:329 [MainMenuComponent] Component initialized {}
logger.js:188 [INFO] ‚úÖ –ì–ª–æ–±–∞–ª—å–Ω—ñ –∫–æ–Ω—Ç—Ä–æ–ª–∏ –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω—ñ
logger.js:186 [DEBUG] [ViewManager] Game controls visibility: {viewName: 'mainMenu', isGameView: false}
logger.js:188 [DEBUG] [ViewManager] Game controls content cleared
logger.js:188 [INFO] üéÆ –î–æ–¥–∞—Ç–æ–∫ –∑–∞–ø—É—â–µ–Ω–æ
logger.js:188 [INFO] ‚úÖ –î–æ–¥–∞—Ç–æ–∫ —É—Å–ø—ñ—à–Ω–æ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–æ–≤–∞–Ω–æ
logger.js:188 [INFO] üéâ –î–æ–¥–∞—Ç–æ–∫ Stay on the board –≥–æ—Ç–æ–≤–∏–π –¥–æ —Ä–æ–±–æ—Ç–∏
logger.js:186 [DEBUG] [GameLogic] Speech initialized {enabled: false}
logger.js:186 [INFO] üìä –°—Ç–æ—Ä—ñ–Ω–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–∞ {loadTime: 11}
logger.js:186 [DEBUG] [StateManager] navigateTo: {viewName: 'gameBoard', params: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'ui.currentView', value: 'gameBoard'}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'ui.currentView', count: 1}
logger.js:186 [DEBUG] [App] ui.currentView changed: {view: 'gameBoard'}
logger.js:186 [DEBUG] [ViewManager] render: {viewName: 'gameBoard', params: {‚Ä¶}}
 [GameBoardComponent] Component created {options: {‚Ä¶}}
 [INFO] [GameBoardComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameBoardComponent] render: boardSize = {boardSize: 3}
 [DEBUG] [StateManager] setState: {path: 'game.gameMode', value: 'vsComputer'}
 [INFO] [GameBoardComponent] Board size mismatch or no board, recreating board {boardSize: 3}
 [DEBUG] [GameCore] createEmptyBoard called with size: {size: 3}
 [DEBUG] [GameCore] Created empty board with size: {rows: 3, cols: 3}
 [DEBUG] [StateManager] setState: {path: 'game.board', value: Array(3)}
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 0, highlightedMovesCount: 0, showingAvailableMoves: false, availableMoves: Array(0), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameBoardComponent] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] toggleAvailableMoves called, show = {show: true}
 [DEBUG] [StateManager] setState: {path: 'game.showingAvailableMoves', value: true}
 [DEBUG] [GameLogic] updateAvailableMoves called
 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 1, gameMode: 'vsComputer', boardSize: 3}
 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 2, player: 1, boardSize: 3}
 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
 [DEBUG] [GameCore] Found valid moves: {count: 6}
 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 2, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(6)}
 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 6}
 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
 [DEBUG] [GameLogic] Available moves updated {moves: 6, logicPlayer: 1}
 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(6)}
 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(0)}
 [DEBUG] [GameLogic] toggleAvailableMoves - final state - showingAvailableMoves: {showingAvailableMoves: true, highlightedMovesCount: 0}
 [GameControlsComponent] Component created {options: {‚Ä¶}}
 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [GameControlsComponent] Component initialized {}
 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
 [DEBUG] [GameBoardComponent] Game controls component rendered successfully
 [DEBUG] [GameBoardComponent] render: –∫—ñ–Ω–µ—Ü—å
 [GameBoardComponent] Component initialized {}
 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
 [DEBUG] [StateManager] subscribe: {path: 'game.board'}
 [DEBUG] [StateManager] subscribe: {path: 'game.highlightedMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.showingAvailableMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.availableMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.blockedCells'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.blockedMode'}
 [INFO] [GameBoardComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameBoardComponent] render: boardSize = {boardSize: 3}
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameBoardComponent] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] toggleAvailableMoves called, show = {show: true}
 [DEBUG] [StateManager] setState: {path: 'game.showingAvailableMoves', value: true}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.showingAvailableMoves', count: 1}
 [DEBUG] [GameBoardComponent] game.showingAvailableMoves changed
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameLogic] updateAvailableMoves called
 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 1, gameMode: 'vsComputer', boardSize: 3}
 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 2, player: 1, boardSize: 3}
 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
 [DEBUG] [GameCore] Found valid moves: {count: 6}
 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 2, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(6)}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 1}
 [DEBUG] [GameBoardComponent] game.availableMoves changed
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 6}
 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 1}
 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameLogic] Available moves updated {moves: 6, logicPlayer: 1}
 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(6)}
 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(0)}
 [DEBUG] [GameLogic] toggleAvailableMoves - final state - showingAvailableMoves: {showingAvailableMoves: true, highlightedMovesCount: 0}
 [GameControlsComponent] Component created {options: {‚Ä¶}}
 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [GameControlsComponent] Component initialized {}
 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
 [DEBUG] [GameBoardComponent] Game controls component rendered successfully
 [DEBUG] [GameBoardComponent] render: –∫—ñ–Ω–µ—Ü—å
 [DEBUG] [ViewManager] Game controls visibility: {viewName: 'gameBoard', isGameView: true}
 [INFO] [StateManager] Setting game mode: {gameMode: 'vsComputer'}
 [DEBUG] [StateManager] setState: {path: 'game.gameMode', value: 'vsComputer'}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.gameMode', count: 4}
 [DEBUG] [GameControlsComponent] game.gameMode changed: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] updateGameMode: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] Computer display element not found
 [DEBUG] [GameControlsComponent] game.gameMode changed: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] updateGameMode: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] Computer display element not found
 [DEBUG] [GameControlsComponent] game.gameMode changed: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] updateGameMode: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] Computer display element not found
 [DEBUG] [GameControlsComponent] game.gameMode changed: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] updateGameMode: {mode: 'vsComputer'}
 [DEBUG] [GameControlsComponent] Computer display element not found
 [DEBUG] [StateManager] Calling viewManager.navigateTo
 [DEBUG] [ViewManager] navigateTo: {viewName: 'gameBoard', params: {‚Ä¶}}
 [DEBUG] [ViewManager] render: {viewName: 'gameBoard', params: {‚Ä¶}}
 [GameBoardComponent] Component created {options: {‚Ä¶}}
 [INFO] [GameBoardComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameBoardComponent] render: boardSize = {boardSize: 3}
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameBoardComponent] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] toggleAvailableMoves called, show = {show: true}
 [DEBUG] [StateManager] setState: {path: 'game.showingAvailableMoves', value: true}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.showingAvailableMoves', count: 1}
 [DEBUG] [GameBoardComponent] game.showingAvailableMoves changed
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameLogic] updateAvailableMoves called
 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 1, gameMode: 'vsComputer', boardSize: 3}
 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 2, player: 1, boardSize: 3}
 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
 [DEBUG] [GameCore] Found valid moves: {count: 6}
 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 2, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(6)}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 1}
 [DEBUG] [GameBoardComponent] game.availableMoves changed
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 6}
 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 1}
 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
 [DEBUG] [GameLogic] Available moves updated {moves: 6, logicPlayer: 1}
 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(6)}
 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(0)}
 [DEBUG] [GameLogic] toggleAvailableMoves - final state - showingAvailableMoves: {showingAvailableMoves: true, highlightedMovesCount: 0}
 [GameControlsComponent] Component created {options: {‚Ä¶}}
 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [GameControlsComponent] Component initialized {}
 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
logger.js:188 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
logger.js:186 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
logger.js:186 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
logger.js:186 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
logger.js:188 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
logger.js:188 [DEBUG] [GameBoardComponent] Game controls component rendered successfully
logger.js:188 [DEBUG] [GameBoardComponent] render: –∫—ñ–Ω–µ—Ü—å
base-component.js:329 [GameBoardComponent] Component initialized {}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.board'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.highlightedMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.showingAvailableMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.availableMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.blockedCells'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.blockedMode'}
logger.js:188 [INFO] [GameBoardComponent] render: –ø–æ—á–∞—Ç–æ–∫
logger.js:186 [DEBUG] [GameBoardComponent] render: boardSize = {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameBoardComponent] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
logger.js:186 [DEBUG] toggleAvailableMoves called, show = {show: true}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.showingAvailableMoves', value: true}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.showingAvailableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.showingAvailableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.showingAvailableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 1, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 2, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 6}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 2, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(6)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 6}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 6, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(6)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameLogic] toggleAvailableMoves - final state - showingAvailableMoves: {showingAvailableMoves: true, highlightedMovesCount: 0}
base-component.js:329 [GameControlsComponent] Component created {options: {‚Ä¶}}
logger.js:188 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
logger.js:186 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
logger.js:186 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
logger.js:186 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
logger.js:188 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
base-component.js:329 [GameControlsComponent] Component initialized {}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.currentPlayer'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDirection'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.gameMode'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'settings.showMoves'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.boardSize'}
logger.js:186 [DEBUG] [StateManager] subscribe: {path: 'game.selectedDistance'}
logger.js:188 [INFO] [GameControlsComponent] render: –ø–æ—á–∞—Ç–æ–∫
logger.js:186 [DEBUG] [GameControlsComponent.render] boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameControlsComponent.render] settings.showMoves: {showMoves: true, final: true}
logger.js:186 [DEBUG] [GameControlsComponent.render] Syncing game.showingAvailableMoves with settings.showMoves: {showMoves: true}
logger.js:186 [DEBUG] [GameControlsComponent] Generated distance buttons: {count: 2, boardSize: 3}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#confirm-move-btn', event: 'click'}
base-component.js:329 [GameControlsComponent] Event listener added successfully {selector: '#no-moves-btn', event: 'click'}
logger.js:188 [INFO] [GameControlsComponent] render: –∑–∞–≤–µ—Ä—à–µ–Ω–æ
logger.js:188 [DEBUG] [GameBoardComponent] Game controls component rendered successfully
logger.js:188 [DEBUG] [GameBoardComponent] render: –∫—ñ–Ω–µ—Ü—å
logger.js:186 [DEBUG] [ViewManager] Game controls visibility: {viewName: 'gameBoard', isGameView: true}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDirection', value: 4}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDirection', count: 9}
logger.js:188 [DEBUG] [GameLogic] onDirectionSelected called with:
logger.js:186 [DEBUG] [GameLogic] Direction selected {direction: 4}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDistance', value: 1}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDistance', count: 17}
logger.js:188 [DEBUG] [GameLogic] onDistanceSelected called with:
logger.js:186 [DEBUG] [GameLogic] Distance selected {distance: 1}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(1)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] Final state after selectDirection: {direction: 4, selectedDistance: 1}
logger.js:188 [INFO] [GameControlsComponent] confirmMove called
logger.js:188 [INFO] [GameControlsComponent] EventBus available:
logger.js:188 [INFO] [GameControlsComponent] Emitting game:confirmMove event
logger.js:186 [DEBUG] Event emitted {event: 'game:confirmMove', data: {‚Ä¶}, timestamp: 1752490008910}
logger.js:188 [INFO] [GameLogic] game:confirmMove received
 [DEBUG] [GameLogic] Calling processPlayerMove
 [DEBUG] [GameLogic] processPlayerMove called
 [DEBUG] [blockedCells =] [GameLogic] processPlayerMove: blockedMode =
 [DEBUG] [distance:] [GameLogic] direction:
 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
 [DEBUG] [New position:] [GameLogic] Board size:
 [DEBUG] [GameLogic] found move: {direction: 4, distance: 1, newRow: 1, newCol: 1}
 [DEBUG] [GameLogic] executeMove called with: {direction: 4, distance: 1, newRow: 1, newCol: 1}
 [DEBUG] [blockedCells –¥–æ =] [GameLogic] executeMove: blockedMode =
 [DEBUG] [Game mode:] [GameLogic] Current player:
 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
 [DEBUG] [2] [GameLogic] Found piece at:
 [DEBUG] [GameLogic] Original board size:
 [DEBUG] [2] [GameLogic] Moving piece from:
 [DEBUG] [blockedCells –¥–æ =] [DIAG] executeMove: blockedMode =
 [DEBUG] [GameLogic] New board size after move:
 [DEBUG] [StateManager] setState: {path: 'game.board', value: Array(3)}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.board', count: 2}
 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:186 [DEBUG] [GameCore] hasValidMoves: {hasMoves: true, count: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.points', value: 0}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.points', count: 1}
logger.js:186 [INFO] üìä –û—á–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ {points: 0}
logger.js:186 [DEBUG] [StateManager] addMoveToHistory: {move: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.moveHistory', value: Array(1)}
logger.js:188 [DEBUG] [GameLogic] Updating available moves after move execution
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 1, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 1, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(8)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(1)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 8, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(8)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(1)}
logger.js:188 [DEBUG] [GameLogic] showGameMessage called
logger.js:188 [DEBUG] [gameMode:] [GameLogic] showGameMessage - currentPlayer:
logger.js:188 [DEBUG] [GameLogic] Message area not found
logger.js:188 [DEBUG] [GameLogic] After move execution - currentPlayer:
logger.js:186 [DEBUG] [GameLogic] Move executed {move: {‚Ä¶}, newPoints: 0}
logger.js:188 [DEBUG] [GameLogic] Move execution completed
logger.js:186 [DEBUG] [GameLogic] Game mode: vsComputer
logger.js:188 [DEBUG] [GameLogic] Current player after executeMove:
logger.js:188 [DEBUG] [GameLogic] Setting currentPlayer to 2 for computer turn
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.currentPlayer', value: 2}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.currentPlayer', count: 9}
logger.js:186 [INFO] üë§ –ü–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å {player: 2}
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 2, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 1, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(8)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(1)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 8, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(8)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(1)}
logger.js:188 [DEBUG] [GameLogic] Current player after setting to 2:
logger.js:188 [DEBUG] [GameLogic] Scheduling computer move in 300ms
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDirection', value: null}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDirection', count: 9}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDistance', value: null}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDistance', count: 17}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:188 [DEBUG] [GameLogic] processPlayerMove completed
logger.js:188 [INFO] [GameControlsComponent] Event emitted
logger.js:188 [DEBUG] [GameLogic] makeComputerMove called
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:188 [DEBUG] [1] [GameLogic] Found piece at:
logger.js:188 [DEBUG] [GameLogic] Board state size:
logger.js:188 [DEBUG] [1] [GameLogic] Looking for moves from position:
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:188 [DEBUG] [blockedMode:] [GameLogic] Available moves for computer count:
logger.js:186 [DEBUG] [GameLogic] makeComputerMove - blocked cells analysis: {blockedMode: false, blockedCellsCount: 0, blockedCells: Array(0), availableMovesCount: 8}
logger.js:188 [DEBUG] [GameLogic] selectBestMove called with moves count:
logger.js:188 [DEBUG] [GameLogic] Shuffled moves count:
logger.js:188 [DEBUG] [Selected move:] [GameLogic] Random index:
logger.js:186 [DEBUG] [GameLogic] Selected best move: {direction: 2, distance: 1, newRow: 2, newCol: 1}
logger.js:186 [DEBUG] [GameLogic] Executing computer move: {direction: 2, distance: 1, newRow: 2, newCol: 1}
logger.js:186 [DEBUG] [GameLogic] executeMove called with: {direction: 2, distance: 1, newRow: 2, newCol: 1}
logger.js:188 [DEBUG] [blockedCells –¥–æ =] [GameLogic] executeMove: blockedMode =
logger.js:188 [DEBUG] [Game mode:] [GameLogic] Current player:
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:188 [DEBUG] [1] [GameLogic] Found piece at:
logger.js:188 [DEBUG] [GameLogic] Original board size:
logger.js:188 [DEBUG] [1] [GameLogic] Moving piece from:
logger.js:188 [DEBUG] [blockedCells –¥–æ =] [DIAG] executeMove: blockedMode =
logger.js:188 [DEBUG] [GameLogic] New board size after move:
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.board', value: Array(3)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.board', count: 2}
logger.js:186 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 2, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 6}
logger.js:186 [DEBUG] [GameCore] hasValidMoves: {hasMoves: true, count: 6}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.points', value: 0}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.points', count: 1}
logger.js:186 [INFO] üìä –û—á–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ {points: 0}
logger.js:186 [DEBUG] [StateManager] addMoveToHistory: {move: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.moveHistory', value: Array(2)}
logger.js:188 [DEBUG] [GameLogic] Updating available moves after move execution
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 2, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 2, col: 1}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 2, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 6}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 2, col: 1, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(6)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 6}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 6, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(6)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(0)}
logger.js:188 [DEBUG] [GameLogic] showGameMessage called
logger.js:188 [DEBUG] [gameMode:] [GameLogic] showGameMessage - currentPlayer:
logger.js:188 [DEBUG] [GameLogic] Message area not found
logger.js:188 [DEBUG] [GameLogic] After move execution - currentPlayer:
logger.js:186 [DEBUG] [GameLogic] Move executed {move: {‚Ä¶}, newPoints: 0}
logger.js:188 [DEBUG] [GameLogic] Move execution completed
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.lastComputerMove', value: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.currentPlayer', value: 1}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.currentPlayer', count: 9}
logger.js:186 [INFO] üë§ –ü–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å {player: 1}
logger.js:188 [DEBUG] [GameLogic] Computer move completed, returning turn to player
logger.js:188 [DEBUG] [GameLogic] Current player after computer move:
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDirection', value: 8}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDirection', count: 9}
logger.js:188 [DEBUG] [GameLogic] onDirectionSelected called with:
logger.js:186 [DEBUG] [GameLogic] Direction selected {direction: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDistance', value: 1}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDistance', count: 17}
logger.js:188 [DEBUG] [GameLogic] onDistanceSelected called with:
logger.js:186 [DEBUG] [GameLogic] Distance selected {distance: 1}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(1)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: 1, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] Final state after selectDirection: {direction: 8, selectedDistance: 1}
logger.js:188 [INFO] [GameControlsComponent] confirmMove called
logger.js:188 [INFO] [GameControlsComponent] EventBus available:
logger.js:188 [INFO] [GameControlsComponent] Emitting game:confirmMove event
logger.js:186 [DEBUG] Event emitted {event: 'game:confirmMove', data: {‚Ä¶}, timestamp: 1752490011934}
logger.js:188 [INFO] [GameLogic] game:confirmMove received
logger.js:188 [DEBUG] [GameLogic] Calling processPlayerMove
logger.js:188 [DEBUG] [GameLogic] processPlayerMove called
logger.js:188 [DEBUG] [blockedCells =] [GameLogic] processPlayerMove: blockedMode =
logger.js:188 [DEBUG] [distance:] [GameLogic] direction:
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 2, col: 1}
logger.js:188 [DEBUG] [New position:] [GameLogic] Board size:
logger.js:186 [DEBUG] [GameLogic] found move: {direction: 8, distance: 1, newRow: 1, newCol: 1}
 [DEBUG] [GameLogic] executeMove called with: {direction: 8, distance: 1, newRow: 1, newCol: 1}
 [DEBUG] [blockedCells –¥–æ =] [GameLogic] executeMove: blockedMode =
 [DEBUG] [Game mode:] [GameLogic] Current player:
 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
 [DEBUG] [GameCore] Found piece at: {row: 2, col: 1}
 [DEBUG] [1] [GameLogic] Found piece at:
 [DEBUG] [GameLogic] Original board size:
 [DEBUG] [1] [GameLogic] Moving piece from:
 [DEBUG] [blockedCells –¥–æ =] [DIAG] executeMove: blockedMode =
 [DEBUG] [GameLogic] New board size after move:
 [DEBUG] [StateManager] setState: {path: 'game.board', value: Array(3)}
 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.board', count: 2}
 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:186 [DEBUG] [GameCore] hasValidMoves: {hasMoves: true, count: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.points', value: 0}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.points', count: 1}
logger.js:186 [INFO] üìä –û—á–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ {points: 0}
logger.js:186 [DEBUG] [StateManager] addMoveToHistory: {move: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.moveHistory', value: Array(3)}
logger.js:188 [DEBUG] [GameLogic] Updating available moves after move execution
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 1, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 1, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(8)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(1)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 8, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(8)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(1)}
logger.js:188 [DEBUG] [GameLogic] showGameMessage called
logger.js:188 [DEBUG] [gameMode:] [GameLogic] showGameMessage - currentPlayer:
logger.js:188 [DEBUG] [GameLogic] Message area not found
logger.js:188 [DEBUG] [GameLogic] After move execution - currentPlayer:
logger.js:186 [DEBUG] [GameLogic] Move executed {move: {‚Ä¶}, newPoints: 0}
logger.js:188 [DEBUG] [GameLogic] Move execution completed
logger.js:186 [DEBUG] [GameLogic] Game mode: vsComputer
logger.js:188 [DEBUG] [GameLogic] Current player after executeMove:
logger.js:188 [DEBUG] [GameLogic] Setting currentPlayer to 2 for computer turn
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.currentPlayer', value: 2}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.currentPlayer', count: 9}
logger.js:186 [INFO] üë§ –ü–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å {player: 2}
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 2, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 1, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(8)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 8}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(1)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 8, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(8)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(1)}
logger.js:188 [DEBUG] [GameLogic] Current player after setting to 2:
logger.js:188 [DEBUG] [GameLogic] Scheduling computer move in 300ms
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDirection', value: null}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDirection', count: 9}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.selectedDistance', value: null}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.selectedDistance', count: 17}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:186 [DEBUG] [GameControlsComponent] game.selectedDistance changed: {distance: null, boardSize: 3, maxDistance: 2}
logger.js:188 [DEBUG] [GameLogic] processPlayerMove completed
logger.js:188 [INFO] [GameControlsComponent] Event emitted
logger.js:188 [DEBUG] [GameLogic] makeComputerMove called
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:188 [DEBUG] [1] [GameLogic] Found piece at:
logger.js:188 [DEBUG] [GameLogic] Board state size:
logger.js:188 [DEBUG] [1] [GameLogic] Looking for moves from position:
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 1, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 8}
logger.js:188 [DEBUG] [blockedMode:] [GameLogic] Available moves for computer count:
logger.js:186 [DEBUG] [GameLogic] makeComputerMove - blocked cells analysis: {blockedMode: false, blockedCellsCount: 0, blockedCells: Array(0), availableMovesCount: 8}
logger.js:188 [DEBUG] [GameLogic] selectBestMove called with moves count:
logger.js:188 [DEBUG] [GameLogic] Shuffled moves count:
logger.js:188 [DEBUG] [Selected move:] [GameLogic] Random index:
logger.js:186 [DEBUG] [GameLogic] Selected best move: {direction: 6, distance: 1, newRow: 1, newCol: 2}
logger.js:186 [DEBUG] [GameLogic] Executing computer move: {direction: 6, distance: 1, newRow: 1, newCol: 2}
logger.js:186 [DEBUG] [GameLogic] executeMove called with: {direction: 6, distance: 1, newRow: 1, newCol: 2}
logger.js:188 [DEBUG] [blockedCells –¥–æ =] [GameLogic] executeMove: blockedMode =
logger.js:188 [DEBUG] [Game mode:] [GameLogic] Current player:
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 1}
logger.js:188 [DEBUG] [1] [GameLogic] Found piece at:
logger.js:188 [DEBUG] [GameLogic] Original board size:
logger.js:188 [DEBUG] [1] [GameLogic] Moving piece from:
logger.js:188 [DEBUG] [blockedCells –¥–æ =] [DIAG] executeMove: blockedMode =
logger.js:188 [DEBUG] [GameLogic] New board size after move:
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.board', value: Array(3)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.board', count: 2}
logger.js:186 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameBoardComponent] game.board changed, boardSize: {boardSize: 3}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 8, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(8), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 2, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 6}
logger.js:186 [DEBUG] [GameCore] hasValidMoves: {hasMoves: true, count: 6}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.points', value: 0}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.points', count: 1}
logger.js:186 [INFO] üìä –û—á–∫–∏ –æ–Ω–æ–≤–ª–µ–Ω–æ {points: 0}
logger.js:186 [DEBUG] [StateManager] addMoveToHistory: {move: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.moveHistory', value: Array(4)}
logger.js:188 [DEBUG] [GameLogic] Updating available moves after move execution
logger.js:188 [DEBUG] [GameLogic] updateAvailableMoves called
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - gameState: {currentPlayer: 2, gameMode: 'vsComputer', boardSize: 3}
logger.js:186 [DEBUG] [GameCore] findPiece called with player: {player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Found piece at: {row: 1, col: 2}
logger.js:186 [DEBUG] [GameLogic] Found piece: {piece: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] getAllValidMoves called with: {row: 1, col: 2, player: 1, boardSize: 3}
logger.js:186 [DEBUG] [GameCore] Checking moves for board size: {size: 3, fromPosition: {‚Ä¶}}
logger.js:186 [DEBUG] [GameCore] Found valid moves: {count: 6}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - piece at: {row: 1, col: 2, logicPlayer: 1, blockedMode: false, blockedCellsCount: 0,¬†‚Ä¶}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.availableMoves', value: Array(6)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.availableMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.availableMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 1, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(1)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] updateAvailableMoves - showingAvailableMoves: {showingAvailableMoves: true, movesCount: 6}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.highlightedMoves', value: Array(0)}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.highlightedMoves', count: 2}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:188 [DEBUG] [GameBoardComponent] game.highlightedMoves changed
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard called with boardSize: {boardSize: 3, boardLength: 3, blockedCellsCount: 0, blockedCells: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard - moves state: {availableMovesCount: 6, highlightedMovesCount: 0, showingAvailableMoves: true, availableMoves: Array(6), highlightedMoves: Array(0)}
logger.js:186 [DEBUG] [GameBoardComponent] renderBoard completed, cells created: {cellsCreated: 9, expected: 9}
logger.js:186 [DEBUG] [GameLogic] Available moves updated {moves: 6, logicPlayer: 1}
logger.js:186 [DEBUG] [GameLogic] Available moves set in state: {availableMoves: Array(6)}
logger.js:186 [DEBUG] [GameLogic] Highlighted moves set in state: {highlightedMoves: Array(0)}
logger.js:188 [DEBUG] [GameLogic] showGameMessage called
logger.js:188 [DEBUG] [gameMode:] [GameLogic] showGameMessage - currentPlayer:
logger.js:188 [DEBUG] [GameLogic] Message area not found
logger.js:188 [DEBUG] [GameLogic] After move execution - currentPlayer:
logger.js:186 [DEBUG] [GameLogic] Move executed {move: {‚Ä¶}, newPoints: 0}
logger.js:188 [DEBUG] [GameLogic] Move execution completed
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.lastComputerMove', value: {‚Ä¶}}
logger.js:186 [DEBUG] [StateManager] setState: {path: 'game.currentPlayer', value: 1}
logger.js:186 [DEBUG] [StateManager] Notifying listeners for: {path: 'game.currentPlayer', count: 9}
logger.js:186 [INFO] üë§ –ü–æ—Ç–æ—á–Ω–∏–π –≥—Ä–∞–≤–µ—Ü—å {player: 1}
logger.js:188 [DEBUG] [GameLogic] Computer move completed, returning turn to player
logger.js:188 [DEBUG] [GameLogic] Current player after computer move:
