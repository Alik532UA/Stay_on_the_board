// network.js ‚Äî –æ–Ω–ª–∞–π–Ω-–ª–æ–≥—ñ–∫–∞ (WebRTC, signaling, –∫—ñ–º–Ω–∞—Ç–∏)

export function generateRoomId() {
    return Math.random().toString(36).substring(2, 8).toUpperCase();
}

export function updateConnectionStatus(connected, text, connectionIndicatorEl, connectionTextEl) {
    connectionIndicatorEl.textContent = connected ? 'üü¢' : 'üî¥';
    connectionTextEl.textContent = text;
}

// –î–∞–ª—ñ –º–æ–∂–Ω–∞ –ø–æ—Å—Ç—É–ø–æ–≤–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç–∏ createRoom, joinRoom, connectToSignalingServer, handleSignalingMessage, initializeWebRTC, createOffer, handleOffer, handleAnswer, handleIceCandidate, onDataChannel, onDataChannelOpen, onDataChannelMessage, onDataChannelClose, onDataChannelError, onIceCandidate, onConnectionStateChange, handleGameMessage, handleGameEnd, handleGameStart, sendMoveToOpponent, handleOpponentMove, startOnlineGame, endOnlineGame, handleOpponentNoMoves 